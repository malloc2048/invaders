#include "mnemonics.h"

// #$ ->
// ($) ->
// $ ->
const std::map<uint8_t, std::string> Mnemonics::mnemonics = {
    std::make_pair(0x00, "BRK"),
    std::make_pair(0x01, "ORA ($NN), X"),
    std::make_pair(0x05, "ORA $NN"),
    std::make_pair(0x06, "ASL $NN"),
    std::make_pair(0x08, "PHP"),
    std::make_pair(0x09, "ORA #$NN"),
    std::make_pair(0x0A, "ASL A"),
    std::make_pair(0x0D, "ORA $NNNN"),
    std::make_pair(0x0E, "ASL $NNNN"),
    std::make_pair(0x10, "BPL $NN"),
    std::make_pair(0x11, "ORA ($NN), Y"),
    std::make_pair(0x15, "ORA #$NN, X"),
    std::make_pair(0x16, "ASL #$NN, X"),
    std::make_pair(0x18, "CLC"),
    std::make_pair(0x19, "ORA $NNNN, Y"),
    std::make_pair(0x1D, "ORA #NNNN, X"),
    std::make_pair(0x1E, "ASL #$NNNN, X"),
    std::make_pair(0x20, "JSR $NNNN"),
    std::make_pair(0x21, "AND ($NN), X"),
    std::make_pair(0x24, "BIT $NN"),
    std::make_pair(0x25, "AND $NN"),
    std::make_pair(0x26, "ROL $NN"),
    std::make_pair(0x28, "PLP"),
    std::make_pair(0x29, "AND #$NN"),
    std::make_pair(0x2A, "ROL A"),
    std::make_pair(0x2C, "BIT $NNNN"),
    std::make_pair(0x2D, "AND $NNNN"),
    std::make_pair(0x2E, "ROL $NNNN"),
    std::make_pair(0x30, "BMI $NN"),
    std::make_pair(0x31, "AND ($NN), Y"),
    std::make_pair(0x35, "AND $NN, X"),
    std::make_pair(0x36, "ROL $NN, X"),
    std::make_pair(0x38, "SEC"),
    std::make_pair(0x39, "AND $NNNN, Y"),
    std::make_pair(0x3D, "AND $NNNN, X"),
    std::make_pair(0x3E, "ROL $NNNN, X"),
    std::make_pair(0x40, "RTI"),
    std::make_pair(0x41, "EOR ($NN), X"),
    std::make_pair(0x45, "EOR $NN"),
    std::make_pair(0x46, "LSR $NN"),
    std::make_pair(0x48, "PHA"),
    std::make_pair(0x49, "EOR #$NN"),
    std::make_pair(0x4A, "LSR A"),
    std::make_pair(0x4C, "JMP $NNNN"),
    std::make_pair(0x4D, "EOR $NNNN"),
    std::make_pair(0x4E, "LSR $NNNN"),
    std::make_pair(0x50, "BVC $NN"),
    std::make_pair(0x51, "EOR ($NN), Y"),
    std::make_pair(0x55, "EOR $NN, X"),
    std::make_pair(0x56, "LSR $NN, X"),
    std::make_pair(0x58, "CLI"),
    std::make_pair(0x59, "EOR $NNNN, Y"),
    std::make_pair(0x5D, "EOR $NNNN, X"),
    std::make_pair(0x5E, "LSR $NNNN, X"),
    std::make_pair(0x60, "RTS"),
    std::make_pair(0x61, "ADC ($NN), X"),
    std::make_pair(0x65, "ADC $NN"),
    std::make_pair(0x66, "ROR $NN"),
    std::make_pair(0x68, "PLA"),
    std::make_pair(0x69, "ADC #$NN"),
    std::make_pair(0x6A, "RAR A"),
    std::make_pair(0x6C, "JMP $NN"),
    std::make_pair(0x6D, "ADC $NNNN"),
    std::make_pair(0x6E, "ROR $NNNN, X"),
    std::make_pair(0x70, "BVS $NN"),
    std::make_pair(0x71, "ADC ($NN), Y"),
    std::make_pair(0x75, "ADC $NN, X"),
    std::make_pair(0x76, "ROR $NN, X"),
    std::make_pair(0x78, "SEI"),
    std::make_pair(0x79, "ADC $NNNN, Y"),
    std::make_pair(0x7D, "ADC $NNNN, X"),
    std::make_pair(0x7E, "ROR $NNNN"),
    std::make_pair(0x81, "STA ($NN), X"),
    std::make_pair(0x85, "STY $NN"),
    std::make_pair(0x86, "STA $NN"),
    std::make_pair(0x88, "DEY"),
    std::make_pair(0x8A, "TXA"),
    std::make_pair(0x8C, "STY $NNNN"),
    std::make_pair(0x8D, "STA $NNNN"),
    std::make_pair(0x8E, "STX $NNNN"),
    std::make_pair(0x90, "BCC $NN"),
    std::make_pair(0x91, "STA ($NN), Y"),
    std::make_pair(0x94, "STY $NN, X"),
    std::make_pair(0x95, "STA $NN, X"),
    std::make_pair(0x96, "STX $NN, Y"),
    std::make_pair(0x98, "TYA"),
    std::make_pair(0x99, "STA $NNNN, Y"),
    std::make_pair(0x9A, "TXS"),
    std::make_pair(0x9D, "STA $NNNN, X"),
    std::make_pair(0xA0, "LDY #$NN"),
    std::make_pair(0xA1, "LDA ($NN), X"),
    std::make_pair(0xA2, "LDX #$NN"),
    std::make_pair(0xA4, "LDY $NN"),
    std::make_pair(0xA5, "LDA $NN"),
    std::make_pair(0xA6, "LDX $NN"),
    std::make_pair(0xA8, "TAY"),
    std::make_pair(0xA9, "LDA #$NN"),
    std::make_pair(0xAA, "TAX"),
    std::make_pair(0xAC, "LDY $NNNN"),
    std::make_pair(0xAD, "LDA $NNNN"),
    std::make_pair(0xAE, "LDX $NNNN"),
    std::make_pair(0xB0, "BCS $NN"),
    std::make_pair(0xB1, "LDA ($NN), Y"),
    std::make_pair(0xB4, "LDY $NN, X"),
    std::make_pair(0xB5, "LDA $NN, X"),
    std::make_pair(0xB6, "LDX $NN, Y"),
    std::make_pair(0xB8, "CLV"),
    std::make_pair(0xB9, "LDA $NNNN, Y"),
    std::make_pair(0xBA, "TSX"),
    std::make_pair(0xBC, "LDY $NNNN, X"),
    std::make_pair(0xBD, "LDA $NNNN, X"),
    std::make_pair(0xBE, "LDX $NNNN, Y"),
    std::make_pair(0xC0, "CPY $NN"),
    std::make_pair(0xC1, "CMP ($NN), X"),
    std::make_pair(0xC4, "CPY $NN"),
    std::make_pair(0xC5, "CMP $NN"),
    std::make_pair(0xC6, "DEC $NN"),
    std::make_pair(0xC8, "INY"),
    std::make_pair(0xC9, "CMP #$NN"),
    std::make_pair(0xCA, "DEX"),
    std::make_pair(0xCC, "CPY $NNNN"),
    std::make_pair(0xCD, "CMP $NNNN"),
    std::make_pair(0xCE, "DEC $NNNN"),
    std::make_pair(0xD0, "BNE $NN"),
    std::make_pair(0xD1, "CMP ($NN), Y"),
    std::make_pair(0xD5, "CMP $NN, X"),
    std::make_pair(0xD6, "DEC $NN, X"),
    std::make_pair(0xD8, "CLD"),
    std::make_pair(0xD9, "CMP $NNNN, Y"),
    std::make_pair(0xDD, "CMP $NNNN, X"),
    std::make_pair(0xDE, "DEC $NNNN, X"),
    std::make_pair(0xE0, "CPX #$NN"),
    std::make_pair(0xE1, "SBC ($NN), X"),
    std::make_pair(0xE4, "CPX $NN"),
    std::make_pair(0xE5, "SBC $NN"),
    std::make_pair(0xE6, "INC $NN"),
    std::make_pair(0xE8, "INX"),
    std::make_pair(0xE9, "SBC #$NN"),
    std::make_pair(0xEA, "NOP"),
    std::make_pair(0xEC, "CPX $NNNN"),
    std::make_pair(0xED, "SBC $NNNN"),
    std::make_pair(0xEE, "INC $NNNN"),
    std::make_pair(0xF0, "BEQ $NN"),
    std::make_pair(0xF1, "SBC ($NN), Y"),
    std::make_pair(0xF5, "SBC $NN, X"),
    std::make_pair(0xF6, "INC $NN, X"),
    std::make_pair(0xF8, "SED"),
    std::make_pair(0xF9, "SBC $NNNN, Y"),
    std::make_pair(0xFD, "SBC $NNNN, X"),
    std::make_pair(0xFE, "INC $NNNN, X"),
};
